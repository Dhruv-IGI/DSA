#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *right_child;
    struct node *left_child;
}*newnode,*parentptr,*nodeptr,*temp,*root;

void create(struct node *root)
{
    root = NULL;
}

struct node *insert(struct node *root,int val)
{
    newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data = val;
    newnode->left_child = NULL;
    newnode->right_child = NULL;
    
    if(root == NULL)
    {
        root = newnode;
    }
    else
    {
        parentptr = NULL;
        nodeptr = root;
        while(nodeptr != NULL)
        {
            parentptr = nodeptr;
            if(nodeptr->data > val)
            {
                nodeptr = nodeptr->left_child;
            }
            else
            {
                nodeptr = nodeptr->right_child;
            }
        }
        if(parentptr->data > val)
        {
            parentptr->left_child = newnode;
        }
        else
        {
            parentptr->right_child = newnode;
        }
    }
    return root;
}

void pre_order(struct node *root)
{
    if(root != NULL)
    {
        printf("%d\t",root->data);
        pre_order(root->left_child);
        pre_order(root->right_child);
    }
}

void inorder(struct node *root)
{
    if(root != NULL)
    {
        inorder(root->left_child);
        printf("%d\t",root->data);
        inorder(root->right_child);
    }
}
void post_order(struct node *root)
{
    if(root != NULL)
    {
        post_order(root->left_child);
        post_order(root->right_child);
        printf("%d\t",root->data);
    }
}

int main()
{
    int choice=1,val;
    create(root);
    while(choice != 0)
    {
        printf("\n Enter data: ");
        scanf("%d",&val);
        root = insert(root,val);
        printf("\n Press 1 to continue: ");
        scanf("%d",&choice);
    }
    printf("\n PREORDER: ");
    pre_order(root);
    printf("\n INORDER: ");
    inorder(root);
    printf("\n POSTORDER: ");
    post_order(root);
}
